@use './mixins/mixins.scss' as *;
@use './mixins/utils.scss' as *;
@use './common/var.scss' as *;
@use './mixins/button' as *;

/* button-group */
@include b(button-group) {
  @include utils-clearfix;

  display: inline-block;
  vertical-align: middle;

  & > .br-button {
    position: relative;
    float: left;

    & + .br-button {
      margin-left: 0;
    }

    &.is-disabled {
      z-index: 1;
    }

    &:first-child {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }

    &:last-child {
      border-bottom-left-radius: 0;
      border-top-left-radius: 0;
    }

    &:first-child:last-child {
      border-top-right-radius: $button-border-radius;
      border-bottom-right-radius: $button-border-radius;
      border-bottom-left-radius: $button-border-radius;
      border-top-left-radius: $button-border-radius;

      &.is-round {
        border-radius: 20px;
      }

      &.is-circle {
        border-radius: 50%;
      }
    }

    &:not(:first-child, :last-child) {
      border-radius: 0;
    }

    &:not(:last-child) {
      margin-right: -1px;
    }

    &:not(.is-disabled) {
      &:hover,
      &:focus,
      &:active {
        z-index: 1;
      }
    }

    @include when(active) {
      z-index: 1;
    }
  }

  & > .br-dropdown {
    & > .br-button {
      border-left-color: rgba($color-white, 0.5);
      border-bottom-left-radius: 0;
      border-top-left-radius: 0;
    }
  }

  @each $type in (primary, success, warning, danger, info) {
    .br-button--#{type} {
      &:first-child {
        border-right-color: rgba($color-white, 0.5);
      }

      &:last-child {
        border-left-color: rgba($color-white, 0.5);
      }

      &:not(:first-child, :last-child) {
        border-right-color: rgba($color-white, 0.5);
        border-left-color: rgba($color-white, 0.5);
      }
    }
  }
}
